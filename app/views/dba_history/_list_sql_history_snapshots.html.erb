<%
@update_area = get_unique_area_id

def link_column_detail(rec, value)
  my_ajax_link_to(value,
    url_for(:action     => "list_sql_detail_historic",
            :dbid       => session[:dbid],
            :instance   => @instance,
            :sql_id     => @sql_id,
            :parsing_schema_name =>@parsing_schema_name,
            :min_snap_id=> rec.min_snap_id,
            :max_snap_id=> rec.max_snap_id,
            :time_selection_start => rec.begin_interval_time.strftime(strftime_format_with_minutes),
            :time_selection_end   => rec.end_interval_time.strftime(strftime_format_with_minutes),  # 1 Tag weiter
            :update_area=> @update_area
          ),
   :title=>"Anzeige der Details des Statements für diesen Zeitraum aus DBA_Hist_SQLStat (unterhalb)")
end




column_options =
  [
          {:caption=>"Start",          :data=>proc{|rec| link_column_detail(rec, localeDateTime(rec.begin_interval_time)) }, :title=>"Beginn des Intervalls des Snapshot",  :plot_master_time=>true },
          {:caption=>"Erstes Auftreten", :data=>proc{|rec| localeDateTime(rec.first_occurrence) },             :title=>"Erstes Auftreten des SQL im Intervall"},
          {:caption=>"Letztes Auftreten", :data=>proc{|rec| localeDateTime(rec.last_occurrence) },             :title=>"Letztes Auftreten des SQL im Intervall"},
          {:caption=>"Plans",          :data=>proc{|rec| formattedNumber(rec.execution_plans) },               :title=>"Number of different execution plans in time range", :align=>"right" },
          {:caption=>"Plan hash value",:data=>proc{|rec| rec.first_plan_hash_value },                          :title=>"Plan hash value of first sample in time range" },
          {:caption=>"Opt. env hash value",:data=>proc{|rec| rec.first_opt_env_hash_value },                   :title=>"Optimizer env hash value of first sample in time range" },
          {:caption=>"Execs",          :data=>proc{|rec| formattedNumber(rec.executions) },                    :title=>"Anzahl Ausfuehrungen im Zeitraum", :align=>"right" },
          {:caption=>"Elapsed",        :data=>proc{|rec| formattedNumber(rec.elapsed_time_secs) },             :title=>"Total elapsed time in Sec.", :align=>"right" },
          {:caption=>"Ela./Ex.",       :data=>proc{|rec| formattedNumber(rec.elapsed_time_secs_per_execute, 4) },  :title=>"elapsed time per execute in Sec. (incl. parallel Query Slaves)", :align=>"right" },
          {:caption=>"CPU",            :data=>proc{|rec| formattedNumber(rec.cpu_time_secs) },                 :title=>"CPU-Zeit gesamt in Sekunden, Summe über alle PQ-Prozesse", :align=>"right" },
          {:caption=>"App.",           :data=>proc{|rec| formattedNumber(rec.application_wait_time_secs) },    :title=>"Application Wait-Time in Sekunden, incl. Row Lock waits", :align=>"right" },
          {:caption=>"Con.",           :data=>proc{|rec| formattedNumber(rec.concurrency_wait_time_secs) },    :title=>"Concurrency Wait Time (sec)", :align=>"right" },
          {:caption=>"Clu.",           :data=>proc{|rec| formattedNumber(rec.cluster_wait_time_secs) },        :title=>"Cluster-Wait-Time im RAC in Sekunden, Summe über alle PQ-Prozesse", :align=>"right" },
          {:caption=>"I/O",            :data=>proc{|rec| formattedNumber(rec.user_io_wait_time_secs) },        :title=>"User-IO Wait Time (sec)", :align=>"right" },
          {:caption=>"PL/SQL",         :data=>proc{|rec| formattedNumber(rec.plsql_exec_time_secs) },          :title=>"PL/SQL Exec Time (sec)", :align=>"right" },
          {:caption=>"Disk Reads",     :data=>proc{|rec| formattedNumber(rec.disk_reads) },                    :title=>"Anzahl DB-Blöcke von Disk gelesen gesamt", :align=>"right" },
          {:caption=>"Disk / Ex.",     :data=>proc{|rec| formattedNumber(rec.disk_reads_per_execute, 3) },     :title=>"Anzahl DB-Blöcke von Disk gelesen per Execute", :align=>"right" },
          {:caption=>"ms/Disk Read",   :data=>proc{|rec| formattedNumber(rec.disk_reads>0 ? rec.user_io_wait_time_secs*1000/rec.disk_reads : 0,2)},   :title=>"Millisekunden je von Disk gelesenen DB-Block",  :align=>"right"},
          {:caption=>"Hit Ratio",      :data=>proc{|rec| formattedNumber(rec.hit_ratio,2) },                   :title=>"Verhältnis Cache-Hits zu Buffer Gets in %",  :align=>"right"},
          {:caption=>"Buffer Gets",    :data=>proc{|rec| formattedNumber(rec.buffer_gets) },                   :title=>"Total number of buffer gets", :align=>"right" },
          {:caption=>"Buffer / Ex.",   :data=>proc{|rec| formattedNumber(rec.buffer_gets_per_exec, 2) },       :title=>"Buffer Gets per execute", :align=>"right" },
          {:caption=>"Buffer / Row",   :data=>proc{|rec| formattedNumber(rec.buffer_gets_per_row,2) },         :title=>"Anzahl DB-Blöcke gelesen je Result-Row",  :align=>"right"},
          {:caption=>"Rows proc.",     :data=>proc{|rec| formattedNumber(rec.rows_processed) },                :title=>"Anzahl Rows processed", :align=>"right" },
          {:caption=>"Rows / Ex.",     :data=>proc{|rec| formattedNumber(rec.rows_processed_per_execute, 2) }, :title=>"Anzahl Rows processed per Execute", :align=>"right" },
          {:caption=>"Parses",         :data=>proc{|rec| formattedNumber(rec.parse_calls) },                   :title=>"Anzahl Parse-Calls insgesamt", :data_title=>'Anzahl Parse-Calls, #{formattedNumber(rec.executions.to_f/rec.parse_calls,2) if rec.parse_calls > 0} Executions je Parse-Call',  :align=>"right"},
  ]

%>
<%=
caption = "Aufkommen an Daten aus DBA_Hist_SQL_Stat von #{@time_selection_start} bis #{@time_selection_end} für SQL-ID = '#{@sql_id}' Instance = #{@instance}"
gen_slickgrid(@hist, column_options, {  :plot_area_id => "#{@update_area}_plot_area",
                                        :div_style   => "float:left; width:100%; max-height:450px; overflow:scroll;",
                                        :caption     => caption.html_safe,
                                        :max_height  => 450
                                     })
%>

<div id="<%= @update_area %>_plot_area" style="float:left; width:100%; ">
</div>


<div id="<%= @update_area %>" style="float:left; width:100%; ">
</div>
