<h3>Description of <%= @table_type %> <%= @owner %>.<%= @table_name %></h3>

<% @update_area = "list_table_description_#{session[:request_counter]}" %>

<%=  my_html_escape(@comment).html_safe %>

<%
column_options =
[
  {:caption=>"Col.Name",          :data=>proc{|rec| rec.column_name},                         :title=>"Column-Name"},
  {:caption=>"Type",              :data=>proc{|rec| rec.data_type},                           :title=>"Data-Type"},
  {:caption=>"Prec.",             :data=>proc{|rec| rec.precision},                           :title=>"Precision", :align=>:right},
  {:caption=>"Sc.",               :data=>proc{|rec| rec.data_scale},                          :title=>"Scale", :align=>:right},
  {:caption=>"N.",                :data=>proc{|rec| rec.nullable},                            :title=>"Nullable"},
  {:caption=>"Def.",              :data=>proc{|rec| rec.data_default},                        :title=>"Default"},
  {:caption=>"Distinct",          :data=>proc{|rec| fn(rec.num_distinct)},                    :title=>"Number of distinct values in column", :align=>:right},
  {:caption=>"Nulls",             :data=>proc{|rec| fn(rec.num_nulls)},                       :title=>"Number of null values in column",     :align=>:right},
  {:caption=>"Avg. Len.",         :data=>proc{|rec| fn(rec.avg_col_len)},                     :title=>"Average column length in bytes",     :align=>:right},
  {:caption=>"Comments",          :data=>proc{|rec| rec.comments},                            :title=>"Comments"},
]
%>

<%= gen_slickgrid(@columns, column_options, {
      :caption => "Columns of #{@table_type}  #{@owner}.#{@table_name}",
      :max_height => 450
    })
%>


<%

   def link_tab_partitions
     if @partition_count == 0
       @partition_count
     else
       my_ajax_link_to(fn(@partition_count),
                       url_for({:action       => :list_table_partitions,
                                :owner        => @owner,
                                :table_name   => @table_name,
                                :update_area  => @update_area,
                               }),
                       :title=>"Show partitions of table #{@owner}.#{@table_name}"
         )
     end
   end



column_options =
[
  {:caption=>"TS",               :data=>proc{|rec| rec.tablespace_name},                  :title=>"Tablespace name"},
  {:caption=>"PctFree",          :data=>proc{|rec| fn(rec.pct_free)},                     :title=>"Percent free", :align=>:right},
  {:caption=>"IniTrans",         :data=>proc{|rec| fn(rec.ini_trans)},                    :title=>"Number of initial entries in transaction list of db block", :align=>:right},
  {:caption=>"MaxTrans",         :data=>proc{|rec| fn(rec.max_trans)},                    :title=>"Maximum number of transactions in transaction list of db block", :align=>:right},
  {:caption=>"Rows",             :data=>proc{|rec| fn(rec.num_rows)},                     :title=>"Number of rows calculated by last analyze run", :align=>:right},
  {:caption=>"Size (MB)",        :data=>proc{|rec| fn(@size_mb, 2)},                      :title=>"Curent object size in megabytes", :align=>:right},
  {:caption=>"Blocks",           :data=>proc{|rec| fn(rec.blocks)},                       :title=>"Number of allocated blocks calculated by last analyze run", :align=>:right},
  {:caption=>"Empty",            :data=>proc{|rec| fn(rec.empty_blocks)},                 :title=>"Number of empty (never used) blocks calculated by last analyze run", :align=>:right},
  {:caption=>"Avg. Space",       :data=>proc{|rec| fn(rec.avg_space)},                    :title=>"Average amount of free space, in bytes, in a data block allocated to the table calculated by last analyze run", :align=>:right},
  {:caption=>"Chained",          :data=>proc{|rec| fn(rec.chain_cnt)},                    :title=>"Number of chained rows calculated by last analyze run", :align=>:right},
  {:caption=>"RowLen",           :data=>proc{|rec| fn(rec.avg_row_len)},                  :title=>"Avg. row len in bytes calculated by last analyze run", :align=>:right},
  {:caption=>"Dg.",              :data=>proc{|rec| fn(rec.degree)},                       :title=>"Default parallel degree of table", :align=>:right},
  {:caption=>"Cache",            :data=>proc{|rec| rec.cache},                            :title=>"Whether the table is to be cached in the buffer cache" },
  {:caption=>"Part.",            :data=>proc{|rec| link_tab_partitions},                  :title=>"Number of table partitions", :align=>:right},
  {:caption=>"Last analyzed",    :data=>proc{|rec| localeDateTime(rec.last_analyzed)},    :title=>"The date of the most recent time this table was analyzed" },
  {:caption=>"IOT",              :data=>proc{|rec| rec.iot_type},                         :title=>"If index-only table, then IOT_TYPE is IOT or IOT_OVERFLOW or IOT_MAPPING else NULL" },
  {:caption=>"T",                :data=>proc{|rec| rec.temporary},                        :title=>"Temporary table ?" },
  {:caption=>"Compr.",           :data=>proc{|rec| rec.compression},                      :title=>"Whether table compression is enabled or not" },
]
column_options << {:caption=>"Comp. for",       :data=>proc{|rec| rec.compress_for},        :title=>"Compress what kind of operations" } if session[:database].version >= "11.2"

%>

<%= gen_slickgrid(@attribs, column_options, {
      :caption => "Attributes of #{@table_type} #{@owner}.#{@table_name}",
      :height => :auto
})
%>

<%
   def link_ind_partitions(rec)
     if rec.partition_number == 0
       rec.partition_number
     else
       my_ajax_link_to("#{rec.partition_number}#{", #{rec.subpartition_number}" if rec.subpartition_number}",
                       url_for({:action       => :list_index_partitions,
                                :owner        => rec.owner,
                                :index_name   => rec.index_name,
                                :update_area  => @update_area,
                               }),
                       :title=>"Show partitions of index #{rec.index_name}"
         )
     end
   end

column_options =
[
  {:caption=>"Name",             :data=>proc{|rec| rec.index_name},                  :title=>"Name of index"},
  {:caption=>"Columns",          :data=>proc{|rec| rec.column_names},                :title=>"Indexes columns / expressions"},
  {:caption=>"Type",             :data=>proc{|rec| rec.index_type},                  :title=>"Type of index"},
  {:caption=>"Unique",           :data=>proc{|rec| rec.uniqueness},                  :title=>"Uniqueness status of the index: UNIQUE,  NONUNIQUE or BITMAP"},
  {:caption=>"Compr.",           :data=>proc{|rec| "#{rec.compression}#{" (#{rec.prefix_length})" if rec.prefix_length}"},  :title=>"Compression an number of key columns for compression"},
  {:caption=>"TS",               :data=>proc{|rec| rec.subpartition_ts_name ? rec.subpartition_ts_name : (rec.partition_ts_name ? rec.partition_ts_name : rec.tablespace_name)},             :title=>"Tablespace name"},
  {:caption=>"Pct Free",         :data=>proc{|rec| fn(rec.subpartition_pct_free ? rec.subpartition_pct_free : (rec.partition_pct_free ? rec.partition_pct_free : rec.pct_free))},                :title=>"Percent free", :align=>:right},
  {:caption=>"Ini Trans",        :data=>proc{|rec| fn(rec.subpartition_ini_trans ? rec.subpartition_ini_trans : (rec.partition_ini_trans ? rec.partition_ini_trans : rec.ini_trans))},               :title=>"Number of initial entries in transaction list of db block", :align=>:right},
  {:caption=>"Max Trans",        :data=>proc{|rec| fn(rec.subpartition_max_trans ? rec.subpartition_max_trans : (rec.partition_max_trans ? rec.partition_max_trans : rec.max_trans))},               :title=>"Maximum number of transactions in transaction list of db block", :align=>:right},
  {:caption=>"Rows",             :data=>proc{|rec| fn(rec.num_rows)},                     :title=>"Number of rows calculated by last analyze run", :align=>:right},
  {:caption=>"Size (MB)",        :data=>proc{|rec| fn(rec.size_mb, 2)},              :title=>"Curent object size in megabytes", :align=>:right},
  {:caption=>"B",                :data=>proc{|rec| fn(rec.blevel)},                  :title=>"B-tree level", :align=>:right},
  {:caption=>"Leaf blocks",      :data=>proc{|rec| fn(rec.leaf_blocks)},             :title=>"Number of leaf blocks in the index calculated by last analyze run", :align=>:right},
  {:caption=>"Distinct",         :data=>proc{|rec| fn(rec.distinct_keys)},           :title=>"Number of distinct keys in the index calculated by last analyze run", :align=>:right},
  {:caption=>"Avg. leaf blocks / key", :data=>proc{|rec| fn(rec.avg_leaf_blocks_per_key)}, :title=>"The average number of leaf blocks per key calculated by last analyze run", :align=>:right},
  {:caption=>"Avg. data blocks / key", :data=>proc{|rec| fn(rec.avg_data_blocks_per_key)}, :title=>"The average number of data blocks per key calculated by last analyze run", :align=>:right},
  {:caption=>"Cluster.",         :data=>proc{|rec| fn(rec.clustering_factor)},        :title=>"A measurement of the amount of (dis)order of the table this index is for", :align=>:right},
  {:caption=>"Status",           :data=>proc{|rec| rec.subpartition_status ? rec.subpartition_status : (rec.partition_status ? rec.partition_status : rec.status) }, :title=>"Index-Status"},
  {:caption=>"Dg.",              :data=>proc{|rec| fn(rec.degree)},                   :title=>"Default parallel degree of table", :align=>:right},
  {:caption=>"Part.",            :data=>proc{|rec| link_ind_partitions(rec)},         :title=>"Number of index partitions and subpartitions", :align=>:right},
  {:caption=>"Last analyzed",    :data=>proc{|rec| localeDateTime(rec.last_analyzed)},:title=>"The date of the most recent time this table was analyzed" },
  {:caption=>"Use",              :data=>proc{|rec| rec.used},                          :title=>"Usage of index detected? From sys.Object_Usage", :data_title=>proc{|rec| "%t: monitoring index = #{rec.monitoring}, start monitoring = #{rec.start_monitoring}, end monitoring = #{rec.end_monitoring}"}, :data_style=>proc{|rec| "background-color:coral;" if rec.used=="NO"} },
  {:caption=>"F. Stat.",         :data=>proc{|rec| rec.funcidx_status},               :title=>"Is the Function-based Index DISABLED or ENABLED?"},
]

%>

<%= gen_slickgrid(@indexes, column_options, {
      :caption => "Indexes of #{@table_type} #{@owner}.#{@table_name}",
      :height => :auto
})
%>

<% if @viewtext %>
<h4>Viewtext of <%= @table_type %> <%= @owner %>.<%= @table_name %></h4>
<pre style="background-color: lightyellow"><%=  @viewtext %></pre>
<% end %>

<%=
    column_options =
    [
      {:caption=>"Constraint name",             :data=>proc{|rec| rec.constraint_name},             :title=>"Constraint name"},
      {:caption=>"Referencing columns",         :data=>proc{|rec| rec.columns},                     :title=>"Referencing column names"},
      {:caption=>"Referenced table owner",      :data=>proc{|rec| rec.r_owner},                     :title=>"Owner of referenced table"},
      {:caption=>"Referenced table name",       :data=>proc{|rec| link_table_structure(@update_area, rec.r_owner, rec.r_table_name, rec.r_table_name) }, :title=>"Name of referenced table"},
      {:caption=>"Referenced constraint name",  :data=>proc{|rec| rec.r_constraint_name},           :title=>"Referenced constraint name"},
      {:caption=>"Referenced columns",          :data=>proc{|rec| rec.r_columns},                   :title=>"Column names of referenced table"},
      {:caption=>"Delete rule",                 :data=>proc{|rec| rec.delete_rule},                 :title=>"Delete rule"},
      {:caption=>"Status",                      :data=>proc{|rec| rec.status},                      :title=>"Status"},
      {:caption=>"Deferred",                    :data=>proc{|rec| rec.deferred},                    :title=>"Deferred-Status"},
      {:caption=>"Validated",                   :data=>proc{|rec| rec.validated},                   :title=>"Validate status"},
      {:caption=>"Last change",                 :data=>proc{|rec| localeDateTime(rec.last_change)}, :title=>"Date of last change"},
    ]

    gen_slickgrid(@references, column_options, {
      :caption => "Foreign key references from  #{@table_type} #{@owner}.#{@table_name}",
      :height => :auto
})
%>

<%=
    column_options =
    [
      {:caption=>"Referencing table owner",     :data=>proc{|rec| rec.owner},                       :title=>"Owner of referencing table"},
      {:caption=>"Referencing table name",      :data=>proc{|rec| link_table_structure(@update_area, rec.owner, rec.table_name, rec.table_name) }, :title=>"Name of referencing table"},
      {:caption=>"Referencing constraint name", :data=>proc{|rec| rec.constraint_name},             :title=>"Referencing constraint name"},
      {:caption=>"Referencing columns",         :data=>proc{|rec| rec.columns},                     :title=>"Referencing column names"},
      {:caption=>"Referenced constraint name",  :data=>proc{|rec| rec.r_constraint_name},           :title=>"Constraint name"},
      {:caption=>"Referenced columns",          :data=>proc{|rec| rec.r_columns},                   :title=>"Column names of referenced table"},
      {:caption=>"Delete rule",                 :data=>proc{|rec| rec.delete_rule},                 :title=>"Delete rule"},
      {:caption=>"Status",                      :data=>proc{|rec| rec.status},                      :title=>"Status"},
      {:caption=>"Deferred",                    :data=>proc{|rec| rec.deferred},                    :title=>"Deferred-Status"},
      {:caption=>"Validated",                   :data=>proc{|rec| rec.validated},                   :title=>"Validate status"},
      {:caption=>"Last change",                 :data=>proc{|rec| localeDateTime(rec.last_change)}, :title=>"Date of last change"},
    ]

    gen_slickgrid(@referencing, column_options, {
      :caption => "Foreign keys referencing to  #{@table_type} #{@owner}.#{@table_name}",
      :height => :auto
})
%>



<div id="<%= @update_area %>" style="clear:both;"></div>