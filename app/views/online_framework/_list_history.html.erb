<%
    @update_area = get_unique_area_id

  def currentQueueLength(rec)
    @start_queue_length = @start_queue_length - rec.incoming.to_i+rec.firsttrysuccess.to_i+rec.retrysuccess.to_i+rec.finalerror.to_i
    @start_queue_length < 0 ? 0 : @start_queue_length
  end

  def link_column(rec, value)
    if @showGroup == "TimeSlice"
      my_ajax_link_to(value,
        url_for(:action => "show_timeslice_details",
                :startMinute => rec.startminute,
                :timeSlice  => @timeSlice,
                :id_domain  => @id_domain,
                :update_area => @update_area,
                :instance   => (@show_rac ? rec.racinstanceid : nil)
               ) ,
        :title=>"Anzeige der Details des Zeitabschnittes nach Msg-Typen (unterhalb)")
    else
      my_ajax_link_to(value,
        url_for(:action => "show_msgtype_details",
                :id_ofmessagetype => rec.id_ofmessagetype.to_i,
                :time_selection_start => @time_selection_start,
                :time_selection_end   => @time_selection_end,
                :timeSlice  => @timeSlice,
                :id_domain => @id_domain,
                :update_area => @update_area,
                :instance   => (@show_rac ? rec.racinstanceid : nil)
               ),
        :title=>"Anzeige der Details des Messagetypes nach Zeitabschnitten (unterhalb)")
    end
  end

  def link_errors(rec, value)
    if value.to_i == 0
      value
    else
      if @showGroup == "TimeSlice"
        my_ajax_link_to(value,
            url_for(:action => "show_oferrormessage",
                    :time_selection_start  => rec.timestamp.strftime(session[:database].strftime_format_with_minutes),
                    :timeSlice  => @timeSlice,
                    :id_domain => @id_domain,
                    :update_area => @update_area ),
          :title=>"Anzeige der Fehlermeldungen des Zeitabschnittes (unterhalb)")
      else
        my_ajax_link_to(value,
            url_for(:action => "show_oferrormessage",
                    :id_ofmessagetype => rec.id_ofmessagetype.to_i,
                    :time_selection_start => @time_selection_start,
                    :time_selection_end   => @time_selection_end,
                    :id_domain => @id_domain,
                    :update_area => @update_area),
          :title=>"Anzeige der Fehlermeldungen des Messagetypes (unterhalb)")
      end
    end
  end


  def msgType(rec)
    Ofmessagetype.get_cached_instance(rec.id_ofmessagetype, session[:database].hash)
  end

  column_options = []
  if @showGroup == "TimeSlice"
    column_options << {:caption=>"Timestamp",  :data=>proc{|rec| link_column(rec, localeDateTime(rec.timestamp))},        :title=>"Beginn des Zeitraumes der Messwerte", :plot_master=>true, :plot_master_time=>"milliSec1970(rec.timestamp)" }
  else
    column_options << {:caption=>"MsgType",    :data=>proc{|rec| link_column(rec, formattedNumber(rec.id_ofmessagetype))},:title=>"ID_OFMessageType", :data_title=>proc{|rec| "#{rec.id_ofmessagetype}:#{msgType(rec).name}: Domain=#{msgType(rec).domain.name}"}}
  end

  column_options << {:caption=>"I",  :data=>proc{|rec| link_column(rec, formattedNumber(rec.racinstanceid))},  :title=>"RAC-Instance" } if @show_rac

  column_options << {:caption=>"Queue Length", :data=>proc{|rec| link_column(rec, formattedNumber(currentQueueLength(rec)))}, :title=>"Anzahl wartende Messages in Queue an Beginn des Zeitraumes (tendentiell)", :align=>'right'} if @showGroup == "TimeSlice"

  column_options.concat define_default_columns
%>

<%=
    gen_slickgrid(@history, column_options, {:plot_area_id => "History_Detail_plot_area",
                                               :div_style => "float:left; width:100%; max-height:450px; overflow:scroll;",
                                               :caption => "Historie Online-Framework",
                                               :max_height=>450
                                              }
                  )
%>

<div id="History_Detail_plot_area" style="clear: both">
</div>

<div id="<%= @update_area %>"></div>


